
spring.application.name = pedro-coder
server.port= 8002

eureka.client.fetch-registry = true
eureka.client.register-with-eureka = true
eureka.server-port = 8000
eureka.instance.hostname = localhost
eureka.client.service-url.defaultZone = http://${eureka.instance.hostname}:${eureka.server-port}/eureka/
# Database server #
# CST China Standard time UTC+8
# Time format and time zone settings
# spring.jackson.date-format=yyyy-MM-dd HH:mm:ss
# spring.jackson.time-zone=CST
# Specify the DBMS
# spring.jpa.database = MYSQL
# Show or not log for each sql query
# Hibernate ddl auto_code (create, create-drop, update). The data definition language is automatically generated, with three possible values in parentheses above.
# Switch the database engine to innodb
# spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect
# Naming strategy
# spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy
# stripped before adding them to the entity manager
# Use custom mysql57 configuration character set and database engine
# spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
spring.datasource.url = jdbc:mysql://localhost:3306/flina?serverTimezone=CST&useUnicode=true&characterEncoding=UTF-8
spring.datasource.username = flina
spring.datasource.password = rootroot
spring.datasource.driverClassName = com.mysql.jdbc.Driver
spring.jackson.date-format=yyyy-MM-dd HH:mm:ss
spring.jackson.time-zone=CST
spring.jpa.database = MYSQL
spring.jpa.show-sql = true
spring.jpa.hibernate.ddl-auto = update
spring.jpa.properties.hibernate.dialect = me.dongqinglin.pedro_coder.ZConfig.MySQLConfig


# File server #
# custom configuration file attribute specification name should be kebab-case style.
# File upload directory (note that the directory structure is different on Linux and Windows)
# file.uploadFolder=/root/uploadFiles/
static-root = /static/
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=1000MB